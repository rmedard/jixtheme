<?php
/**
 * @file
 * Bootstrap sub-theme.
 *
 * Place your custom PHP code in this file.
 */

function jir_preprocess_menu(&$variables) {

    if ($variables['menu_name'] == 'jobs-tabs-menu') {
        $featured = Drupal::entityQuery('node')
            ->condition('type', 'job')
            ->condition('status', 1)
            ->condition('field_job_posting_plan', [
                'featured',
                'featured_custom',
                'featured_shortlist',
            ], 'IN')
            ->count();
        $featured_count = $featured->execute();

        $jobs = Drupal::entityQuery('node')
            ->condition('type', 'job')
            ->condition('status', 1)
            ->condition('field_job_advert_type', 'job')
            ->count();
        $jobs_count = $jobs->execute();

        $tenders = Drupal::entityQuery('node')
            ->condition('type', 'job')
            ->condition('status', 1)
            ->condition('field_job_advert_type', 'tender')
            ->count();
        $tenders_count = $tenders->execute();

        $internship = Drupal::entityQuery('node')
            ->condition('type', 'job')
            ->condition('status', 1)
            ->condition('field_job_advert_type', 'internship')
            ->count();
        $internship_count = $internship->execute();

        $publics = Drupal::entityQuery('node')
            ->condition('type', 'job')
            ->condition('status', 1)
            ->condition('field_job_company_name.entity.field_employer_service_publique', 1)
            ->count();
        $publics_count = $publics->execute();

        $others = Drupal::entityQuery('node')
            ->condition('type', 'job')
            ->condition('status', 1)
            ->condition('field_job_advert_type', 'other')
            ->count();
        $others_count = $others->execute();

        $menu_values = [
            1 => $featured_count,
            2 => $jobs_count,
            3 => $tenders_count,
            4 => $internship_count,
            5 => $publics_count,
            6 => $others_count,
        ];

        $variables['menu_values'] = $menu_values;
    }
}

function jir_preprocess_page(&$variables) {
    $variables['#cache']['contexts'][] = 'url.path';
    $variables['#cache']['contexts'][] = 'url.query_args'; // If you have query args available and want to update cache when they change.

    $page_path = \Drupal::request()->getPathInfo();
    $variables['show_jir_search'] = FALSE;
    $variables['show_sidebars'] = TRUE;
    $variables['show_footer'] = TRUE;

    /*
     * This regex accepts paths like "/" only, or "/adverts/*" where *
     * is a word from a-z, no special character.
     */

    if (\Drupal::service('path.matcher')->isFrontPage() or preg_match('(\/adverts\/.*)', $page_path)) {
        $variables['show_jir_search'] = TRUE;
    }

    if (preg_match('(/pricing-plans-view)', $page_path)) {
        $variables['show_sidebars'] = FALSE;
    }

    if (preg_match('(/pricing-plans)', $page_path)
        or preg_match('(/page/our-services)', $page_path)
        or preg_match('(/page/poster-un-offre)', $page_path)) {
        $variables['show_sidebars'] = FALSE;
    }

    $exception = \Drupal::request()->attributes->get('exception');
    if ($exception and ($exception->getStatusCode() == '404' or $exception->getStatusCode() == '403')) {
        $variables['show_sidebars'] = FALSE;
    }
}

function jir_preprocess_field(&$variables) {
//    kint($variables['entity_type']);
//    kint($variables['bundle']);
//    $custom_block = \Drupal::entityTypeManager()->getStorage('block_content')->load('1');
    if ($variables['entity_type'] == 'block_content') {
        kint($variables['element']['#object']);
        kint($variables['element']['#object']->id());
    }
}